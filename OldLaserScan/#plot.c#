using namespace::std;
void plot(int scan_number, int isvme, int istime)
{
  if (isvme == 0)
    { 
      if (istime == 0)
	{
	  TString filename1 = Form("/home/daq/Data/AnalysisScope/processdata_%d.txt", scan_number);
	  gStyle->SetTitleSize(0.06,"xyz");	
	  gStyle->SetTitleSize(0.06,"t");
	  //Plotting amplitude vs position
	  auto c1 = new TCanvas("c1","c1",2000,1400);
	  c1->Divide(1,4,0,0);
	  TPad *pad(NULL);	
	  pad = static_cast<TPad *>(c1->cd(1));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.14);
	  pad->SetTopMargin(0.1);
	  pad->SetRightMargin(0.1);
	  c1->cd(1);  
	  TGraphErrors *gr1  = new TGraphErrors(filename1, "%lg %*lg %lg %lg");
	  gr1->SetName("gr1");
	  gr1->SetMarkerColor(kBlack);
	  gr1->SetMarkerStyle(20);
	  gr1->SetLineColor(kBlack);
	  TGraphErrors *gr2  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %lg %lg"); 
	  gr2->SetName("gr2");
	  gr2->SetMarkerColor(kRed);
	  gr2->SetLineColor(kRed);
	  gr2->SetMarkerStyle(20);
	  TGraphErrors *gr3  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr3->SetName("gr3");
	  gr3->SetMarkerColor(kBlue);
	  gr3->SetLineColor(kBlue);
	  gr3->SetMarkerStyle(20);
	  auto legend = new TLegend(0.1,0.7,0.2,0.9);
	  legend->AddEntry(gr1,"Channel 2","p");
	  legend->AddEntry(gr2,"Channel 3","p");
	  legend->AddEntry(gr3,"Channel 4","p");
	  auto mg = new TMultiGraph();
	  mg->Add(gr1);
	  mg->Add(gr2);
	  mg->Add(gr3);
	  mg->Draw("AEP");
	  mg->GetXaxis()->SetTitle("Position [mm]");
	  mg->GetYaxis()->SetTitle("Amplitude [mV]");
	  mg->SetTitle("Amplitude Scan");
	  legend->Draw();
  
	  //Plotting efficiency vs position	
	  pad = static_cast<TPad *>(c1->cd(3));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.15);
	  pad->SetTopMargin(0.15);
	  pad->SetRightMargin(0.1);
	  c1->cd(3);
	  TGraph *eff1  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg");
	  eff1->SetName("eff1");
	  eff1->SetMarkerColor(kBlack);
	  eff1->SetMarkerStyle(20);
	  eff1->SetLineColor(kBlack);
	  TGraph *eff2  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff2->SetName("eff2");
	  eff2->SetMarkerColor(kRed);
	  eff2->SetMarkerStyle(20);
	  eff2->SetLineColor(kRed);
	  TGraph *eff3  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff3->SetName("eff3");
	  eff3->SetMarkerColor(kBlue);
	  eff3->SetMarkerStyle(20);
	  eff3->SetLineColor(kBlue);
	  auto legend3 = new TLegend(0.1,0.7,0.2,0.9);
	  legend3->AddEntry(eff1,"Channel 2","p");
	  legend3->AddEntry(eff2,"Channel 3","p");
	  legend3->AddEntry(eff3,"Channel 4","p");
	  auto mg3 = new TMultiGraph();
	  mg3->Add(eff1);
	  mg3->Add(eff2);
	  mg3->Add(eff3);
	  mg3->Draw("AEP");
	  mg3->GetXaxis()->SetTitle("Position [mm]");
	  mg3->GetYaxis()->SetTitle("Efficiency [%]");
	  mg3->SetTitle("Efficiency Scan");
	  legend3->Draw();

	  //Plotting time resolution vs position	
	  pad = static_cast<TPad *>(c1->cd(2));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.15);
	  pad->SetRightMargin(0.1);
	  pad->SetTopMargin(0.15);
	  c1->cd(2);
	  TGraphErrors *tr1  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  tr1->SetName("tr1");
	  tr1->SetMarkerColor(kBlack);
	  tr1->SetMarkerStyle(20);
	  tr1->SetLineColor(kBlack);
	  TGraphErrors *tr2  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr2->SetName("tr2");
	  tr2->SetMarkerColor(kRed);
	  tr2->SetMarkerStyle(20);
	  tr2->SetLineColor(kRed);
	  TGraphErrors *tr3  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr3->SetName("tr3");
	  tr3->SetMarkerColor(kBlue);
	  tr3->SetMarkerStyle(20);
	  tr3->SetLineColor(kBlue);
	  auto legend2 = new TLegend(0.1,0.7,0.2,0.9);
	  legend2->AddEntry(tr1,"Channel 2","p");
	  legend2->AddEntry(tr2,"Channel 3","p");
	  legend2->AddEntry(tr3,"Channel 4","p"); 
	  auto mg2 = new TMultiGraph();
	  mg2->Add(tr1);
	  mg2->Add(tr2);
	  mg2->Add(tr3);
	  mg2->SetMaximum(150); 
	  mg2->Draw("AEP");
	  mg2->GetXaxis()->SetTitle("Position [mm]");
	  mg2->GetYaxis()->SetTitle("Time Resolution [ps]");
	  mg2->SetTitle("Time Resolution Scan");
	  legend2->Draw();

	  //////////////////////////NEW CANVAS//////////////////////
	  auto c2 = new TCanvas("c2","c2",900,1400);
	  c2->Divide(1,2,0,0);
	  TPad *pad2(NULL);
	  //Plotting Bias vs position	
	  pad2 = static_cast<TPad *>(c2->cd(1));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l1  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  l1->SetName("l1");
	  l1->SetMarkerColor(kBlack);
	  l1->SetMarkerStyle(20);
	  l1->SetLineColor(kBlack);
	  //auto legend4 = new TLegend(0.1,0.8,0.15,0.9);
	  //legend4->AddEntry(tr1,"Bias Voltage","p"); 

	  l1->GetXaxis()->SetTitle("Position [mm]");
	  l1->GetYaxis()->SetTitle("Bias Voltage [V]");
	  l1->SetTitle("Bias Voltage vs Position");
	  //l1->GetYaxis()->SetTitleOffset(0.8);
	  l1->Draw("AEP");
	  //legend4->Draw();

	  pad2 = static_cast<TPad *>(c2->cd(2));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l2  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  l2->SetName("l2");
	  l2->SetMarkerColor(kRed);
	  l2->SetMarkerStyle(20);
	  l2->SetLineColor(kRed);
	  //auto legend5 = new TLegend(0.1,0.7,0.2,0.9);
	  //legend5->AddEntry(l2,"Current","p"); 
	  l2->Draw("AEP");
	  l2->GetXaxis()->SetTitle("Position [mm]");
	  l2->GetYaxis()->SetTitle("Current [A]");
	  l2->SetTitle("Current vs Position");
	  //legend5->Draw();

	  pad2 = static_cast<TPad *>(c2->cd(3));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l3  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  l3->SetName("l3");
	  l3->SetMarkerColor(kBlue);
	  l3->SetMarkerStyle(20);
	  l3->SetLineColor(kBlue);
	  //auto legend5 = new TLegend(0.1,0.7,0.2,0.9);
	  //legend5->AddEntry(l2,"Current","p"); 
	  l3->Draw("AEP");
	  l3->GetXaxis()->SetTitle("Position [mm]");
	  l3->GetYaxis()->SetTitle("Resistance [Ohms]");
	  l3->SetTitle("Resistance vs Position");

	  TString filename2 = Form("/home/daq/Data/AnalysisScope/plot_%d.pdf", scan_number);
	  TString filename3 = Form("/home/daq/Data/AnalysisScope/plot_%d_lab.pdf", scan_number);
	  c1->Print(filename2);
	  c2->Print(filename3);
	}
      else if (istime == 1)
	{
	  TString filename1 = Form("/home/daq/Data/AnalysisScope/processdata_%d.txt", scan_number);   
	  gStyle->SetTitleSize(0.06,"xyz");	
	  gStyle->SetTitleSize(0.06,"t");
	  //Plotting amplitude vs position
	  auto c1 = new TCanvas("c1","c1",2000,1400);
	  c1->Divide(1,4,0,0);
	  TPad *pad(NULL);	
	  pad = static_cast<TPad *>(c1->cd(1));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.14);
	  pad->SetTopMargin(0.1);
	  pad->SetRightMargin(0.1);
	  c1->cd(1);  
	  TGraphErrors *gr1  = new TGraphErrors(filename1, "%*lg %lg %lg %lg");
	  gr1->SetName("gr1");
	  gr1->SetMarkerColor(kBlack);
	  gr1->SetMarkerStyle(20);
	  gr1->SetLineColor(kBlack);
	  TGraphErrors *gr2  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %lg %lg"); 
	  gr2->SetName("gr2");
	  gr2->SetMarkerColor(kRed);
	  gr2->SetLineColor(kRed);
	  gr2->SetMarkerStyle(20);
	  TGraphErrors *gr3  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr3->SetName("gr3");
	  gr3->SetMarkerColor(kBlue);
	  gr3->SetLineColor(kBlue);
	  gr3->SetMarkerStyle(20);
	  auto legend = new TLegend(0.1,0.7,0.2,0.9);
	  legend->AddEntry(gr1,"Channel 2","p");
	  legend->AddEntry(gr2,"Channel 3","p");
	  legend->AddEntry(gr3,"Channel 4","p");
	  auto mg = new TMultiGraph();
	  mg->Add(gr1);
	  mg->Add(gr2);
	  mg->Add(gr3);
	  mg->Draw("AEP");
	  mg->GetXaxis()->SetTitle("Position [mm]");
	  mg->GetYaxis()->SetTitle("Amplitude [mV]");
	  mg->SetTitle("Amplitude Scan");
	  legend->Draw();
  
	  //Plotting efficiency vs position	
	  pad = static_cast<TPad *>(c1->cd(3));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.15);
	  pad->SetTopMargin(0.15);
	  pad->SetRightMargin(0.1);
	  c1->cd(3);
	  TGraph *eff1  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %lg");
	  eff1->SetName("eff1");
	  eff1->SetMarkerColor(kBlack);
	  eff1->SetMarkerStyle(20);
	  eff1->SetLineColor(kBlack);
	  TGraph *eff2  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff2->SetName("eff2");
	  eff2->SetMarkerColor(kRed);
	  eff2->SetMarkerStyle(20);
	  eff2->SetLineColor(kRed);
	  TGraph *eff3  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff3->SetName("eff3");
	  eff3->SetMarkerColor(kBlue);
	  eff3->SetMarkerStyle(20);
	  eff3->SetLineColor(kBlue);
	  auto legend3 = new TLegend(0.1,0.7,0.2,0.9);
	  legend3->AddEntry(eff1,"Channel 2","p");
	  legend3->AddEntry(eff2,"Channel 3","p");
	  legend3->AddEntry(eff3,"Channel 4","p");
	  auto mg3 = new TMultiGraph();
	  mg3->Add(eff1);
	  mg3->Add(eff2);
	  mg3->Add(eff3);
	  mg3->Draw("AEP");
	  mg3->GetXaxis()->SetTitle("Position [mm]");
	  mg3->GetYaxis()->SetTitle("Efficiency [%]");
	  mg3->SetTitle("Efficiency Scan");
	  legend3->Draw();

	  //Plotting time resolution vs position	
	  pad = static_cast<TPad *>(c1->cd(2));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.15);
	  pad->SetRightMargin(0.1);
	  pad->SetTopMargin(0.15);
	  c1->cd(2);
	  TGraphErrors *tr1  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  tr1->SetName("tr1");
	  tr1->SetMarkerColor(kBlack);
	  tr1->SetMarkerStyle(20);
	  tr1->SetLineColor(kBlack);
	  TGraphErrors *tr2  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr2->SetName("tr2");
	  tr2->SetMarkerColor(kRed);
	  tr2->SetMarkerStyle(20);
	  tr2->SetLineColor(kRed);
	  TGraphErrors *tr3  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr3->SetName("tr3");
	  tr3->SetMarkerColor(kBlue);
	  tr3->SetMarkerStyle(20);
	  tr3->SetLineColor(kBlue);
	  auto legend2 = new TLegend(0.1,0.7,0.2,0.9);
	  legend2->AddEntry(tr1,"Channel 2","p");
	  legend2->AddEntry(tr2,"Channel 3","p");
	  legend2->AddEntry(tr3,"Channel 4","p"); 
	  auto mg2 = new TMultiGraph();
	  mg2->Add(tr1);
	  mg2->Add(tr2);
	  mg2->Add(tr3);
	  mg2->SetMaximum(150); 
	  mg2->Draw("AEP");
	  mg2->GetXaxis()->SetTitle("Position [mm]");
	  mg2->GetYaxis()->SetTitle("Time Resolution [ps]");
	  mg2->SetTitle("Time Resolution Scan");
	  legend2->Draw();

	  //////////////////////////NEW CANVAS//////////////////////
	  auto c2 = new TCanvas("c2","c2",900,1400);
	  c2->Divide(1,3,0,0);
	  TPad *pad2(NULL);
	  //Plotting Bias vs position	
	  pad2 = static_cast<TPad *>(c2->cd(1));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l1  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  l1->SetName("l1");
	  l1->SetMarkerColor(kBlack);
	  l1->SetMarkerStyle(20);
	  l1->SetLineColor(kBlack);
	  //auto legend4 = new TLegend(0.1,0.8,0.15,0.9);
	  //legend4->AddEntry(tr1,"Bias Voltage","p"); 

	  l1->GetXaxis()->SetTitle("Position [mm]");
	  l1->GetYaxis()->SetTitle("Bias Voltage [V]");
	  l1->SetTitle("Bias Voltage vs Position");
	  //l1->GetYaxis()->SetTitleOffset(0.8);
	  l1->Draw("AEP");
	  //legend4->Draw();

	  pad2 = static_cast<TPad *>(c2->cd(2));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l2  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  l2->SetName("l2");
	  l2->SetMarkerColor(kRed);
	  l2->SetMarkerStyle(20);
	  l2->SetLineColor(kRed);
	  //auto legend5 = new TLegend(0.1,0.7,0.2,0.9);
	  //legend5->AddEntry(l2,"Current","p"); 
	  l2->Draw("AEP");
	  l2->GetXaxis()->SetTitle("Position [mm]");
	  l2->GetYaxis()->SetTitle("Bias Current [A]");
	  l2->SetTitle("Bias Current vs Position");
	  //legend5->Draw();
	  pad2 = static_cast<TPad *>(c2->cd(3));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l3  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  l3->SetName("l3");
	  l3->SetMarkerColor(kBlue);
	  l3->SetMarkerStyle(20);
	  l3->SetLineColor(kBlue);
	  //auto legend5 = new TLegend(0.1,0.7,0.2,0.9);
	  //legend5->AddEntry(l2,"Bias Current","p"); 
	  l3->Draw("AEP");
	  l3->GetXaxis()->SetTitle("Position [mm]");
	  l3->GetYaxis()->SetTitle("Resistance [Ohms]");
	  l3->SetTitle("Resistance vs Position");


	  TString filename2 = Form("/home/daq/Data/AnalysisScope/plot_%d.pdf", scan_number);
	  TString filename3 = Form("/home/daq/Data/AnalysisScope/plot_%d_lab.pdf", scan_number);
	  c1->Print(filename2);
	  c2->Print(filename3);
	}
    }
  else if (isvme == 1)
    {
      if (istime == 0)
	{
	  TString filename1 = Form("/home/daq/LaserScan/AnalysisVME/processdata_%d.txt", scan_number);
	  //cout<<filename1<<endl;
	  gStyle->SetTitleSize(0.06,"xyz");	
	  gStyle->SetTitleSize(0.06,"t");
	  //Plotting amplitude vs position
	  auto c1 = new TCanvas("c1","c1",2000,1400);
	  //c1->Divide(1,4,0,0);
	  TPad *pad(NULL);	
	  pad = static_cast<TPad *>(c1->cd(1));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.14);
	  pad->SetTopMargin(0.1);
	  pad->SetRightMargin(0.1);
	  //c1->cd(1);  
	  TGraphErrors *gr1  = new TGraphErrors(filename1, "%lg %*lg %lg %lg");
	  gr1->SetName("gr1");
	  gr1->SetMarkerColor(kBlack);
	  gr1->SetMarkerStyle(20);
	  gr1->SetLineColor(kBlack);
	  TGraphErrors *gr2  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %lg %lg"); 
	  gr2->SetName("gr2");
	  gr2->SetMarkerColor(kRed);
	  gr2->SetLineColor(kRed);
	  gr2->SetMarkerStyle(20);
	  TGraphErrors *gr3  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr3->SetName("gr3");
	  gr3->SetMarkerColor(kBlack);
	  gr3->SetLineColor(kBlack);
	  gr3->SetMarkerStyle(20);
	  TGraphErrors *gr4  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  gr4->SetName("gr4");
	  gr4->SetMarkerColor(kRed);
	  gr4->SetMarkerStyle(20);
	  gr4->SetLineColor(kRed);
	  TGraphErrors *gr5  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr5->SetName("gr5");
	  gr5->SetMarkerColor(kBlack);
	  gr5->SetLineColor(kBlack);
	  gr5->SetMarkerStyle(20);
	  TGraphErrors *gr6  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr6->SetName("gr6");
	  gr6->SetMarkerColor(kBlack);
	  gr6->SetLineColor(kRed);
	  gr6->SetMarkerStyle(20);
	  TGraphErrors *gr7  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr7->SetName("gr7");
	  gr7->SetMarkerColor(kBlack);
	  gr7->SetLineColor(kBlack);
	  gr7->SetMarkerStyle(20);
	  TGraphErrors *gr8  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr8->SetName("gr8");
	  gr8->SetMarkerColor(kRed);
	  gr8->SetLineColor(kRed);
	  gr8->SetMarkerStyle(20);
	  auto legend = new TLegend(0.1,0.7,0.2,0.9);
	  legend->AddEntry(gr1,"Channel 1","p");
	  legend->AddEntry(gr2,"Channel 2","p");
	  legend->AddEntry(gr3,"Channel 3","p");
	  legend->AddEntry(gr4,"Channel 4","p");
	  legend->AddEntry(gr5,"Channel 5","p");
	  legend->AddEntry(gr6,"Channel 6","p");
	  legend->AddEntry(gr7,"Channel 7","p");
	  legend->AddEntry(gr8,"Channel 8","p");
	  auto mg = new TMultiGraph();
	  mg->Add(gr1);
	  mg->Add(gr2);
	  mg->Add(gr3);
	  mg->Add(gr4);
	  mg->Add(gr5);
	  mg->Add(gr6);
	  mg->Add(gr7);
	  mg->Add(gr8);
	  mg->Draw("AEP");
	  mg->GetXaxis()->SetTitle("Position [mm]");
	  mg->GetYaxis()->SetTitle("Amplitude [mV]");
	  mg->SetTitle("Amplitude Scan");
	  //legend->Draw();
	  /*
	  //Plotting efficiency vs position	
	  pad = static_cast<TPad *>(c1->cd(3));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.15);
	  pad->SetTopMargin(0.15);
	  pad->SetRightMargin(0.1);
	  c1->cd(3);
	  TGraph *eff1  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg");
	  eff1->SetName("eff1");
	  eff1->SetMarkerColor(kRed);
	  eff1->SetMarkerStyle(20);
	  eff1->SetLineColor(kRed);
	  TGraph *eff2  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff2->SetName("eff2");
	  eff2->SetMarkerColor(kRed);
	  eff2->SetMarkerStyle(20);
	  eff2->SetLineColor(kRed);
	  TGraph *eff3  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff3->SetName("eff3");
	  eff3->SetMarkerColor(kRed);
	  eff3->SetMarkerStyle(20);
	  eff3->SetLineColor(kRed);
	  TGraph *eff4  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg");
	  eff4->SetName("eff4");
	  eff4->SetMarkerColor(kRed);
	  eff4->SetMarkerStyle(20);
	  eff4->SetLineColor(kRed);
	  TGraph *eff5  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff5->SetName("eff5");
	  eff5->SetMarkerColor(kRed);
	  eff5->SetMarkerStyle(20);
	  eff5->SetLineColor(kRed);
	  TGraph *eff6  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff6->SetName("eff6");
	  eff6->SetMarkerColor(kRed);
	  eff6->SetMarkerStyle(20);
	  eff6->SetLineColor(kRed);
	  TGraph *eff7  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff7->SetName("eff7");
	  eff7->SetMarkerColor(kRed);
	  eff7->SetMarkerStyle(20);
	  eff7->SetLineColor(kRed);
	  TGraph *eff8  = new TGraph(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff8->SetName("eff8");
	  eff8->SetMarkerColor(kRed);
	  eff8->SetMarkerStyle(20);
	  eff8->SetLineColor(kRed);



	  auto legend3 = new TLegend(0.1,0.7,0.2,0.9);
	  legend3->AddEntry(eff1,"Channel 1","p");
	  legend3->AddEntry(eff2,"Channel 2","p");
	  legend3->AddEntry(eff3,"Channel 3","p");
	  legend3->AddEntry(eff4,"Channel 4","p");
	  legend3->AddEntry(eff5,"Channel 5","p");
	  legend3->AddEntry(eff6,"Channel 6","p");
	  legend3->AddEntry(eff7,"Channel 7","p");
	  legend3->AddEntry(eff8,"Channel 8","p");
	  auto mg3 = new TMultiGraph();
	  mg3->Add(eff1);
	  mg3->Add(eff2);
	  mg3->Add(eff3);
	  mg3->Add(eff4);
	  mg3->Add(eff5);
	  mg3->Add(eff6);
	  mg3->Add(eff7);
	  mg3->Add(eff8);
	  mg3->Draw("AEP");
	  mg3->GetXaxis()->SetTitle("Position [mm]");
	  mg3->GetYaxis()->SetTitle("Efficiency");
	  mg3->SetTitle("Efficiency Scan");
	  //legend3->Draw();

	  //Plotting time resolution vs position	
	  pad = static_cast<TPad *>(c1->cd(2));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.15);
	  pad->SetRightMargin(0.1);
	  pad->SetTopMargin(0.15);
	  c1->cd(2);
	  TGraphErrors *tr1  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  tr1->SetName("tr1");
	  tr1->SetMarkerColor(kBlue);
	  tr1->SetMarkerStyle(20);
	  tr1->SetLineColor(kBlue);
	  TGraphErrors *tr2  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr2->SetName("tr2");
	  tr2->SetMarkerColor(kBlue);
	  tr2->SetMarkerStyle(20);
	  tr2->SetLineColor(kBlue);
	  TGraphErrors *tr3  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr3->SetName("tr3");
	  tr3->SetMarkerColor(kBlue);
	  tr3->SetMarkerStyle(20);
	  tr3->SetLineColor(kBlue);
	  TGraphErrors *tr4  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr4->SetName("tr4");
	  tr4->SetMarkerColor(kBlue);
	  tr4->SetMarkerStyle(20);
	  tr4->SetLineColor(kBlue);
	  TGraphErrors *tr5  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr5->SetName("tr5");
	  tr5->SetMarkerColor(kBlue);
	  tr5->SetMarkerStyle(20);
	  tr5->SetLineColor(kBlue);
	  TGraphErrors *tr6  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr6->SetName("tr6");
	  tr6->SetMarkerColor(kBlue);
	  tr6->SetMarkerStyle(20);
	  tr6->SetLineColor(kBlue);
	  TGraphErrors *tr7  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr7->SetName("tr7");
	  tr7->SetMarkerColor(kBlue);
	  tr7->SetMarkerStyle(20);
	  tr7->SetLineColor(kBlue);
	  TGraphErrors *tr8  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr8->SetName("tr8");
	  tr8->SetMarkerColor(kBlue);
	  tr8->SetMarkerStyle(20);
	  tr8->SetLineColor(kBlue);
	  auto legend2 = new TLegend(0.1,0.7,0.2,0.9);
	  legend2->AddEntry(tr1,"Channel 1","p");
	  legend2->AddEntry(tr2,"Channel 2","p");
	  legend2->AddEntry(tr3,"Channel 3","p");
	  legend2->AddEntry(tr4,"Channel 4","p");
	  legend2->AddEntry(tr5,"Channel 5","p");
	  legend2->AddEntry(tr6,"Channel 6","p");
	  legend2->AddEntry(tr7,"Channel 7","p");
	  legend2->AddEntry(tr8,"Channel 8","p"); 
	  auto mg2 = new TMultiGraph();
	  mg2->Add(tr1);
	  mg2->Add(tr2);
	  mg2->Add(tr3);
	  mg2->Add(tr4);
	  mg2->Add(tr5);
	  mg2->Add(tr6);
	  mg2->Add(tr7);
	  mg2->Add(tr8);
	  mg2->SetMaximum(150); 
	  mg2->Draw("AEP");
	  mg2->GetXaxis()->SetTitle("Position [mm]");
	  mg2->GetYaxis()->SetTitle("Time Resolution [ps]");
	  mg2->SetTitle("Time Resolution Scan");
	  //legend2->Draw();
	  
	  //////////////////////////NEW CANVAS//////////////////////
	  auto c2 = new TCanvas("c2","c2",900,1400);
	  c2->Divide(1,4,0,0);
	  TPad *pad2(NULL);
	  //Plotting Bias vs position	
	  pad2 = static_cast<TPad *>(c2->cd(1));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l1  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  l1->SetName("l1");
	  l1->SetMarkerColor(kBlack);
	  l1->SetMarkerStyle(20);
	  l1->SetLineColor(kBlack);
	  //auto legend4 = new TLegend(0.1,0.8,0.15,0.9);
	  //legend4->AddEntry(tr1,"Bias Voltage","p"); 

	  l1->GetXaxis()->SetTitle("Position [mm]");
	  l1->GetYaxis()->SetTitle("Bias Voltage [V]");
	  l1->SetTitle("Bias Voltage vs Position");
	  //l1->GetYaxis()->SetTitleOffset(0.8);
	  l1->Draw("AEP");
	  //legend4->Draw();

	  pad2 = static_cast<TPad *>(c2->cd(2));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l2  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  l2->SetName("l2");
	  l2->SetMarkerColor(kRed);
	  l2->SetMarkerStyle(20);
	  l2->SetLineColor(kRed); 
	  l2->Draw("AEP");
	  l2->GetXaxis()->SetTitle("Position [mm]");
	  l2->GetYaxis()->SetTitle("Bias Current [A]");
	  l2->SetTitle("Bias Current vs Position");

	  pad2 = static_cast<TPad *>(c2->cd(3));
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l3  = new TGraphErrors(filename1, "%lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  l3->SetName("l3");
	  l3->SetMarkerColor(kBlue);
	  l3->SetMarkerStyle(20);
	  l3->SetLineColor(kBlue); 
	  l3->Draw("AEP");
	  l3->GetXaxis()->SetTitle("Position [mm]");
	  l3->GetYaxis()->SetTitle("Resistance [Ohms]");
	  l3->SetTitle("Resistance vs Position");

	  TString filename2 = Form("/home/daq/Data/AnalysisVME/plot_%d.pdf", scan_number);
	  TString filename3 = Form("/home/daq/Data/AnalysisVME/plot_%d_lab.pdf", scan_number);
	  c1->Print(filename2);
	  c2->Print(filename3);*/
	}
      else if (istime == 1)
	{
	  TString filename1 = Form("/home/daq/LaserScan/AnalysisVME/processdata_%d.txt", scan_number);
	  gStyle->SetTitleSize(0.06,"xyz");	
	  gStyle->SetTitleSize(0.06,"t");
	  //Plotting amplitude vs position
	  auto c1 = new TCanvas("c1","c1",2000,1400);
	  c1->Divide(1,4,0,0);
	  TPad *pad(NULL);	
	  pad = static_cast<TPad *>(c1->cd(1));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.14);
	  pad->SetTopMargin(0.1);
	  pad->SetRightMargin(0.1);
	  c1->cd(1);  
	  TGraphErrors *gr1  = new TGraphErrors(filename1, "%*lg %lg %lg %lg");
	  gr1->SetName("gr1");
	  gr1->SetMarkerColor(kBlack);
	  gr1->SetMarkerStyle(20);
	  gr1->SetLineColor(kBlack);
	  TGraphErrors *gr2  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %lg %lg"); 
	  gr2->SetName("gr2");
	  gr2->SetMarkerColor(kBlack);
	  gr2->SetLineColor(kBlack);
	  gr2->SetMarkerStyle(20);
	  TGraphErrors *gr3  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr3->SetName("gr3");
	  gr3->SetMarkerColor(kBlack);
	  gr3->SetLineColor(kBlack);
	  gr3->SetMarkerStyle(20);
	  TGraphErrors *gr4  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  gr4->SetName("gr1");
	  gr4->SetMarkerColor(kBlack);
	  gr4->SetMarkerStyle(20);
	  gr4->SetLineColor(kBlack);
	  TGraphErrors *gr5  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr5->SetName("gr5");
	  gr5->SetMarkerColor(kBlack);
	  gr5->SetLineColor(kBlack);
	  gr5->SetMarkerStyle(20);
	  TGraphErrors *gr6  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr6->SetName("gr6");
	  gr6->SetMarkerColor(kBlack);
	  gr6->SetLineColor(kBlack);
	  gr6->SetMarkerStyle(20);
	  TGraphErrors *gr7  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr7->SetName("gr7");
	  gr7->SetMarkerColor(kBlack);
	  gr7->SetLineColor(kBlack);
	  gr7->SetMarkerStyle(20);
	  TGraphErrors *gr8  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  gr8->SetName("gr8");
	  gr8->SetMarkerColor(kBlack);
	  gr8->SetLineColor(kBlack);
	  gr8->SetMarkerStyle(20);
	  auto legend = new TLegend(0.1,0.7,0.2,0.9);
	  legend->AddEntry(gr1,"Channel 1","p");
	  legend->AddEntry(gr2,"Channel 2","p");
	  legend->AddEntry(gr3,"Channel 3","p");
	  legend->AddEntry(gr4,"Channel 4","p");
	  legend->AddEntry(gr5,"Channel 5","p");
	  legend->AddEntry(gr6,"Channel 6","p");
	  legend->AddEntry(gr7,"Channel 7","p");
	  legend->AddEntry(gr8,"Channel 8","p");
	  auto mg = new TMultiGraph();
	  mg->Add(gr1);
	  mg->Add(gr2);
	  mg->Add(gr3);
	  mg->Add(gr4);
	  mg->Add(gr5);
	  mg->Add(gr6);
	  mg->Add(gr7);
	  mg->Add(gr8);
	  mg->Draw("AEP");
	  mg->GetXaxis()->SetTitle("Position [mm]");
	  mg->GetYaxis()->SetTitle("Amplitude [mV]");
	  mg->SetTitle("Amplitude Scan");
	  legend->Draw();
  
	  //Plotting efficiency vs position	
	  pad = static_cast<TPad *>(c1->cd(3));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.15);
	  pad->SetTopMargin(0.15);
	  pad->SetRightMargin(0.1);
	  c1->cd(3);
	  TGraph *eff1  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg");
	  eff1->SetName("eff1");
	  eff1->SetMarkerColor(kBlack);
	  eff1->SetMarkerStyle(20);
	  eff1->SetLineColor(kBlack);
	  TGraph *eff2  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff2->SetName("eff2");
	  eff2->SetMarkerColor(kBlack);
	  eff2->SetMarkerStyle(20);
	  eff2->SetLineColor(kBlack);
	  TGraph *eff3  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff3->SetName("eff3");
	  eff3->SetMarkerColor(kBlack);
	  eff3->SetMarkerStyle(20);
	  eff3->SetLineColor(kBlack);
	  TGraph *eff4  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg");
	  eff4->SetName("eff4");
	  eff4->SetMarkerColor(kBlack);
	  eff4->SetMarkerStyle(20);
	  eff4->SetLineColor(kBlack);
	  TGraph *eff5  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff5->SetName("eff5");
	  eff5->SetMarkerColor(kBlack);
	  eff5->SetMarkerStyle(20);
	  eff5->SetLineColor(kBlack);
	  TGraph *eff6  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff6->SetName("eff6");
	  eff6->SetMarkerColor(kBlack);
	  eff6->SetMarkerStyle(20);
	  eff6->SetLineColor(kBlack);
	  TGraph *eff7  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff7->SetName("eff7");
	  eff7->SetMarkerColor(kBlack);
	  eff7->SetMarkerStyle(20);
	  eff7->SetLineColor(kBlack);
	  TGraph *eff8  = new TGraph(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg"); 
	  eff8->SetName("eff8");
	  eff8->SetMarkerColor(kBlack);
	  eff8->SetMarkerStyle(20);
	  eff8->SetLineColor(kBlack);



	  auto legend3 = new TLegend(0.1,0.7,0.2,0.9);
	  legend3->AddEntry(eff1,"Channel 1","p");
	  legend3->AddEntry(eff2,"Channel 2","p");
	  legend3->AddEntry(eff3,"Channel 3","p");
	  legend3->AddEntry(eff4,"Channel 4","p");
	  legend3->AddEntry(eff5,"Channel 5","p");
	  legend3->AddEntry(eff6,"Channel 6","p");
	  legend3->AddEntry(eff7,"Channel 7","p");
	  legend3->AddEntry(eff8,"Channel 8","p");
	  auto mg3 = new TMultiGraph();
	  mg3->Add(eff1);
	  mg3->Add(eff2);
	  mg3->Add(eff3);
	  mg3->Add(eff4);
	  mg3->Add(eff5);
	  mg3->Add(eff6);
	  mg3->Add(eff7);
	  mg3->Add(eff8);
	  mg3->Draw("AEP");
	  mg3->GetXaxis()->SetTitle("Position [mm]");
	  mg3->GetYaxis()->SetTitle("Efficiency [%]");
	  mg3->SetTitle("Efficiency Scan");
	  legend3->Draw();

	  //Plotting time resolution vs position	
	  pad = static_cast<TPad *>(c1->cd(2));	
	  //pad->SetLeftMargin(0.2);	
	  pad->SetBottomMargin(0.15);
	  pad->SetRightMargin(0.1);
	  pad->SetTopMargin(0.15);
	  c1->cd(2);
	  TGraphErrors *tr1  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  tr1->SetName("tr1");
	  tr1->SetMarkerColor(kBlack);
	  tr1->SetMarkerStyle(20);
	  tr1->SetLineColor(kBlack);
	  TGraphErrors *tr2  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr2->SetName("tr2");
	  tr2->SetMarkerColor(kBlack);
	  tr2->SetMarkerStyle(20);
	  tr2->SetLineColor(kBlack);
	  TGraphErrors *tr3  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr3->SetName("tr3");
	  tr3->SetMarkerColor(kBlack);
	  tr3->SetMarkerStyle(20);
	  tr3->SetLineColor(kBlack);
	  TGraphErrors *tr4  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr4->SetName("tr4");
	  tr4->SetMarkerColor(kBlack);
	  tr4->SetMarkerStyle(20);
	  tr4->SetLineColor(kBlack);
	  TGraphErrors *tr5  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr5->SetName("tr5");
	  tr5->SetMarkerColor(kBlack);
	  tr5->SetMarkerStyle(20);
	  tr5->SetLineColor(kBlack);
	  TGraphErrors *tr6  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr6->SetName("tr6");
	  tr6->SetMarkerColor(kBlack);
	  tr6->SetMarkerStyle(20);
	  tr6->SetLineColor(kBlack);
	  TGraphErrors *tr7  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr7->SetName("tr7");
	  tr7->SetMarkerColor(kBlack);
	  tr7->SetMarkerStyle(20);
	  tr7->SetLineColor(kBlack);
	  TGraphErrors *tr8  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  tr8->SetName("tr8");
	  tr8->SetMarkerColor(kBlack);
	  tr8->SetMarkerStyle(20);
	  tr8->SetLineColor(kBlack);
	  auto legend2 = new TLegend(0.1,0.7,0.2,0.9);
	  legend2->AddEntry(tr1,"Channel 1","p");
	  legend2->AddEntry(tr2,"Channel 2","p");
	  legend2->AddEntry(tr3,"Channel 3","p");
	  legend2->AddEntry(tr4,"Channel 4","p");
	  legend2->AddEntry(tr5,"Channel 5","p");
	  legend2->AddEntry(tr6,"Channel 6","p");
	  legend2->AddEntry(tr7,"Channel 7","p");
	  legend2->AddEntry(tr8,"Channel 8","p"); 
	  auto mg2 = new TMultiGraph();
	  mg2->Add(tr1);
	  mg2->Add(tr2);
	  mg2->Add(tr3);
	  mg2->Add(tr4);
	  mg2->Add(tr5);
	  mg2->Add(tr6);
	  mg2->Add(tr7);
	  mg2->Add(tr8);
	  mg2->SetMaximum(150); 
	  mg2->Draw("AEP");
	  mg2->GetXaxis()->SetTitle("Position [mm]");
	  mg2->GetYaxis()->SetTitle("Time Resolution [ps]");
	  mg2->SetTitle("Time Resolution Scan");
	  legend2->Draw();
	  
	  //////////////////////////NEW CANVAS//////////////////////
	  auto c2 = new TCanvas("c2","c2",900,1400);
	  c2->Divide(1,3,0,0);
	  TPad *pad2(NULL);
	  //Plotting Bias vs position	
	  pad2 = static_cast<TPad *>(c2->cd(1));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l1  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg");
	  l1->SetName("l1");
	  l1->SetMarkerColor(kBlack);
	  l1->SetMarkerStyle(20);
	  l1->SetLineColor(kBlack);
	  //auto legend4 = new TLegend(0.1,0.8,0.15,0.9);
	  //legend4->AddEntry(tr1,"Bias Voltage","p"); 

	  l1->GetXaxis()->SetTitle("Position [mm]");
	  l1->GetYaxis()->SetTitle("Bias Voltage [V]");
	  l1->SetTitle("Bias Voltage vs Position");
	  //l1->GetYaxis()->SetTitleOffset(0.8);
	  l1->Draw("AEP");
	  //legend4->Draw();
	  
	  pad2 = static_cast<TPad *>(c2->cd(2));	
	  //pad->SetLeftMargin(0.2);	
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l2  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  l2->SetName("l2");
	  l2->SetMarkerColor(kBlack);
	  l2->SetMarkerStyle(20);
	  l2->SetLineColor(kBlack); 
	  l2->Draw("AEP");
	  l2->GetXaxis()->SetTitle("Position [mm]");
	  l2->GetYaxis()->SetTitle("Bias Current [A]");
	  l2->SetTitle("Bias Current vs Position");

	  pad2 = static_cast<TPad *>(c2->cd(3));
	  pad2->SetBottomMargin(0.15);
	  pad2->SetRightMargin(0.1);
	  pad2->SetLeftMargin(0.2);
	  pad2->SetTopMargin(0.15);
	  TGraphErrors *l3  = new TGraphErrors(filename1, "%*lg %lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %*lg %lg %lg"); 
	  l3->SetName("l3");
	  l3->SetMarkerColor(kBlack);
	  l3->SetMarkerStyle(20);
	  l3->SetLineColor(kBlack); 
	  l3->Draw("AEP");
	  l3->GetXaxis()->SetTitle("Position [mm]");
	  l3->GetYaxis()->SetTitle("Resistance [Ohms]");
	  l3->SetTitle("Resistance vs Position");

	  TString filename2 = Form("/home/daq/Data/AnalysisVME/plot_%d.pdf", scan_number);
	  TString filename3 = Form("/home/daq/Data/AnalysisVME/plot_%d_lab.pdf", scan_number);
	  c1->Print(filename2);
	  c2->Print(filename3);

	}
    }
}
 
